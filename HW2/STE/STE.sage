n = 48581831406795994297084387875908073313351613309409699802212849541437777313122084789367619979954427646991517141229352987075806819683785286275425466760042896412323863176295270262454852592225929680726666553857406533085950170538333531662851921033001954744540998800354945472568877832939334190993251808713852258863
c = 24599617483042629578277285121173972504912037859463986046909740409463586319449226283343281615331318429105218275830212466271037796920749914715936814706377048655769225549466920127520555595115275564186559817818323021427991884151664970652516767069186401865986263921250135587004577360458810521385005579290744708085
e = 3

beta = 1
epsilon = beta**2 / 7
nbits = n.nbits()
kbits = floor(nbits * (beta**2 / e - epsilon))
mbar = 702223880805592151456759840151962786569522257399338504974336254522393264865238137237142489540654437582500444843247630303354647534431314931612685275935445798350655833690880801860555545317367555154113605281582053784524026102900245630757473088050106395169337932361665140387507997686939745191863608129932492800

PR.<x> = PolynomialRing(Zmod(n))
f = (mbar + x)**e - c
roots = f.small_roots(X=2**kbits, beta=1) # find root < 2^kbits with factor = n
mbar + roots[0]

#702223880805592151456759840151962786569522257399338504974336254522393264865238137237142489540654437582500444843247630303354647534431314931612685275935445798350655833690880801860555545317367555154113605281582053784524026102900245630757473088050106395169337932361665140480949895973081456986702895095875854717